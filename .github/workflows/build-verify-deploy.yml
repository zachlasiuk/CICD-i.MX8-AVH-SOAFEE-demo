name: Build_Verify_Deploy_x2
run-name: CI/CD pipeline ðŸš€
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: [self-hosted, build-and-verify]
    steps:
     - uses: actions/checkout@v2

     - name: Build 
       run: |
        echo "Buildin source images and containers..."
        echo "...no code changes to build, in order to speed up the demo."
         
  verify:
    needs: build
    runs-on: [self-hosted, build-and-verify]
    steps:
      - uses: actions/checkout@v2

      - name: Install Docker
        run: |
          echo "pre-installed on runner. Proceed to next step"
        
      - name: Obtain Docker images
        run: |
          sudo docker pull public.ecr.aws/g1v9u7e2/github-universe-demo:video_capture_container
          sudo docker pull public.ecr.aws/g1v9u7e2/github-universe-demo:application_container
          sudo docker pull public.ecr.aws/g1v9u7e2/github-universe-demo:inference_container
        

      - name: Unit test (1) 
        run: |
          echo 'Run your unit tests here, in the following places:'
          echo '   Arm cloud    - docker containers'
          echo '   AVH in cloud - docker containers'
          echo '   i.MX board   - docker containers'


  deploy-virtual:
    needs: verify
    runs-on: [self-hosted, avh-middleman]
    steps:
      - name: Deploy to virtual board, Arm Virtual Hardware
        run: |
          echo "deploying to virtual AVH representation of i.MX board..."

      - name: Set up ssh
        run: |
          echo "ssh connection to AVH is already configured on the self-hosted runner EC2 machine."
          ls ~/.ssh/  

      - name: Test SSH connection
        run: |
          ssh -T -J ae53f196-f856-4fe8-b365-b604c5af7540@proxy.app.avh.arm.com root@10.11.0.7 "
            echo 'inside AVH via ssh connection.';
            echo ' Check who I am';
            whoami;

            echo 'check where I am';    
            pwd;    

            echo 'kill docker containers if running';
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true;

            echo 'Pulled docker already. Verify the images are present in the AVH machine';
            sudo docker images;

            echo 'start docker images';
            
            echo '  video container start';
            sudo docker run --detach --rm --name video_stream --network=host public.ecr.aws/g1v9u7e2/github-universe-demo:video_capture_container ./rtsp-simple-server mp4.yml;
            
            echo '  inference container start';
            sudo docker run --detach  --rm --network=host --name inference_server public.ecr.aws/g1v9u7e2/github-universe-demo:inference_container -m tiny_yolov3 -p 8080;
            
            echo '  app container start, view output into file';
            sudo docker run -d --rm --network=host --name application public.ecr.aws/g1v9u7e2/github-universe-demo:application_container -r rtsp://localhost:8554/cam -p 8080 -m tiny_yolov3 -nui;
            
            sleep 10;
            

            echo '   read logs'; 
            sudo docker logs application;


            echo '   clean up by stopping containers'
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true;
          "


      
      #- name: Jumphost
      #  run: |
      #    ssh -v -J ${{ secrets.JUMP_HOST }} ${{ secrets.AVH_USER_IP }}
      #    ls 
      #    cat /etc/os-release
    
          

  deploy-physical:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to physical board, i.MX8M Plus
        run: |
          echo "deploying to i.MX..."
          ls