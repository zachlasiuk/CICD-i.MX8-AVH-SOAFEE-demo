name: Build_Verify_Deploy_x2
run-name: CI/CD pipeline ðŸš€
on:
  push:
  workflow_dispatch: 
jobs:
  build-and-verify:
    runs-on: [self-hosted, build-and-verify]
    steps:
     - uses: actions/checkout@v2

     - name: Build application
       run: |
        echo "Building source images and containers..."
        echo "...not rebuilding ML app, to speed up the CI/CD portion of the demo. Using pre-built code."

        echo "==================================================="
        echo ""
        echo "ANNOUNCEMENT: Native Arm runners coming next year!"
        echo ""
        echo "==================================================="


     - name: Verify - 1) existance tests
       run: |
        echo 'Verify the containers were built and exist as expected.'
        echo ''
        echo "existance alraedy verified to optimize for demo."


     - name: Verify - 2) communication tests
       run: |
         echo 'Verify the containers run and ports are open to communicate with one another as expected.'
         echo ''
         echo "communication alraedy verified to optimize for demo."


     - name: Push app to container repository
       run: |
        echo "Pushing containers to AWS ECR, to be deployed directly onto the virtual and physical i.MX8 board."
        echo '' 
        echo "pushing already done to optimize for demo."

  deploy-virtual:
    needs: build-and-verify
    runs-on: [self-hosted, avh-middleman]
    steps:
      - name: Set up ssh connection
        run: |
          echo "ssh connection to AVH is already configured on this runner. Keyfiles exist in the ~/.ssh/ dir here:"
          ls ~/.ssh/  

      - name: Deploy to virtual AVH i.MX8 board
        run: |
          ssh -T ${{secrets.IMX_AVH__USER_IP}} "
            echo 'inside AVH via ssh connection.';

            echo 'kill docker containers if running';
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true;

            echo 'Pulled docker already. Verify the images are present in the AVH machine';
            sudo docker images;

            echo 'start docker images';
            
            echo '  video container start';
            sudo docker run --detach --rm --name video_stream --network=host public.ecr.aws/g1v9u7e2/github-universe-demo:video_capture_container ./rtsp-simple-server mp4.yml;
            
            echo '  inference container start';
            sudo docker run --detach  --rm --network=host --name inference_server public.ecr.aws/g1v9u7e2/github-universe-demo:inference_container -m tiny_yolov3 -p 8080;
            
            echo '  app container start, while recording logs';
            sudo docker run -d --rm --network=host --name application public.ecr.aws/g1v9u7e2/github-universe-demo:application_container -r rtsp://localhost:8554/cam -p 8080 -m tiny_yolov3 -nui;
            
            echo '  wait for containers to connect together and start running inferences.';
            sleep 10;

            echo '  Verify app is running as expected by checking logs for expected output:';
            echo ''
            sudo docker logs application | grep -q 'Taking input from RTSP stream....' && echo 'TRUE, APP DEPLOYED AND RUNNING' || echo 'FALSE';            
            echo ''
            echo ''

            echo '   display logs for viewing'; 
            sudo docker logs application;


            echo '   clean up by stopping containers';
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true;
          "

          
  deploy-physical: 
    needs: build-and-verify
    runs-on: [self-hosted, imx-middleman]
    steps:
      - name: Deploy to physical board, i.MX8M Plus
        run: |
          ssh -T ${{secrets.IMX_BOARD__USER_IP}} " 
            echo 'inside i.MX via ssh connection.';

            echo 'kill docker containers if running';
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true; 

            echo 'Pulled docker already. Verify the images are present on the i.MX8 board';
            sudo docker images;

            echo 'start docker images';
            
            echo '  video container start';
            sudo docker run --detach --rm --name video_stream --network=host public.ecr.aws/g1v9u7e2/github-universe-demo:video_capture_container ./rtsp-simple-server mp4.yml;
            
            echo '  inference container start';
            sudo docker run --detach  --rm --network=host --name inference_server public.ecr.aws/g1v9u7e2/github-universe-demo:inference_container -m tiny_yolov3 -p 8080;
            
            echo '  app container start, while recording logs';
            sudo docker run -d --rm --network=host --name application public.ecr.aws/g1v9u7e2/github-universe-demo:application_container -r rtsp://localhost:8554/cam -p 8080 -m tiny_yolov3 -nui;
            
            echo '  wait for containers to connect together and start running inferences.';
            sleep 10;

            echo '  Verify app is running as expected by checking logs for expected output:';
            echo ''
            sudo docker logs application | grep -q 'Taking input from RTSP stream....' && echo 'TRUE, APP DEPLOYED AND RUNNING' || echo 'FALSE';            
            echo ''
            echo ''

            echo '   display logs for viewing'; 
            sudo docker logs application;

            echo '   clean up by stopping containers';
            sudo docker rm -f video_stream || true;
            sudo docker rm -f inference_server || true;
            sudo docker rm -f application || true;
          "